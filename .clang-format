# clang-format style 

# If we need to disable the clang-format check for a part of the file, we can use:
# // clang-format off
# // clang-format on

BasedOnStyle: LLVM
IndentWidth: 4
TabWidth: 4
UseTab: Never

# Braces and layout
BreakBeforeBraces: Allman
AllowShortIfStatementsOnASingleLine: false
# AllowShortFunctionsOnASingleLine: InlineOnly
AllowShortFunctionsOnASingleLine: None
AllowShortLoopsOnASingleLine: false

# Namespace formatting
NamespaceIndentation: All
IndentCaseLabels: true

# Spaces and punctuation
SpaceBeforeParens: ControlStatements
SpacesInParentheses: false
SpacesInSquareBrackets: false
SpaceAfterCStyleCast: true

# Sorting and includes
SortIncludes: true
IncludeBlocks: Regroup
IncludeCategories:
  - Regex:           '^"CppUTest/.*"'
    Priority:        10  # Higher value = lower in the list
    SortPriority:    0    # Optional: do not sort within category
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        20
    SortPriority:    2
    CaseSensitive:   true
  - Regex:           '^((<|")(gtest|gmock|isl|json)/)'
    Priority:        30
  - Regex:           '<[[:alnum:].]+>'
    Priority:        40
  - Regex:           '"[[:alnum:].]+"'
    Priority:        50    
  - Regex:           '.*'
    Priority:        100
    SortPriority:    0


# C++ specific
Cpp11BracedListStyle: true
DerivePointerAlignment: false
PointerAlignment: Left

# Column and wrapping
ColumnLimit: 80
AlwaysBreakTemplateDeclarations: Yes
AlignConsecutiveAssignments: true
AlignConsecutiveDeclarations: true
AlignTrailingComments: true
AlignArrayOfStructures: Right
AlwaysBreakBeforeMultilineStrings: false

AlwaysBreakAfterReturnType: TopLevel
BreakConstructorInitializers: AfterColon
# TrailingCommaCpp11: true 

# Naming rules (optional - informational only, clang-format doesn't enforce this)
# You can enforce naming via clang-tidy if desired
# VariableCase: camelCase
# StructCase: PascalCase
# FunctionCase: camelCase
# EnumCase: PascalCase
